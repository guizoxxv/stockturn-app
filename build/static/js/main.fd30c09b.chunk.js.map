{"version":3,"sources":["utils/validationErrors.ts","config/index.ts","services/api.ts","context/auth.tsx","utils/flash.ts","pages/login/index.tsx","shared/components/logoutModal.tsx","shared/components/header.tsx","context/pagination.tsx","context/product.tsx","pages/products/components/viewProductModal.tsx","pages/products/components/deleteProductModal.tsx","pages/products/components/editProductModal.tsx","pages/products/components/viewStockTimelineModal.tsx","pages/products/components/productsTable.tsx","shared/components/paginator.tsx","pages/products/components/createProductModal.tsx","pages/products/components/filterProductsModal.tsx","context/upload.tsx","pages/products/components/uploadProductsCsvModal.tsx","pages/products/index.tsx","pages/uploads/components/viewUploadModal.tsx","pages/uploads/components/uploadsTable.tsx","pages/uploads/components/uploadCsvModal.tsx","pages/uploads/index.tsx","routes/Route.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getValidationErrors","err","validationErrors","inner","forEach","error","errorPath","path","split","message","appDomain","apiBaseUrl","process","flashMessageStorageId","loginRequest","a","email","password","axios","get","post","trim","getUserData","userData","username","name","response","data","logoutRequest","getProductsRequest","filters","queryString","qs","deleteProductRequest","productId","delete","createProductRequest","product","editProductRequest","put","id","getUploadsRequest","uploadCsvRequest","AuthContext","createContext","AuthProvider","children","useCookies","cookies","removeCookie","useState","authData","setAuthData","logged","setLogged","clearCookies","useCallback","domain","useEffect","then","res","catch","console","log","login","credentials","logout","Provider","value","flashToast","flashMessageObj","localStorage","getItem","JSON","parse","level","toast","type","removeItem","Login","setEmail","setPassword","setValidationErrors","useContext","e","preventDefault","schema","Yup","shape","required","validate","abortEarly","className","icon","faBarcode","size","style","position","top","left","transform","onSubmit","htmlFor","onChange","target","role","LogoutModal","tabIndex","aria-hidden","data-dismiss","onClick","$","modal","Header","pathname","useLocation","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","PaginationContext","PaginationProvider","pagination","setPagination","ProductContext","ProductProvider","products","setProducts","setFilters","getProducts","current_page","first_page_url","from","last_page","last_page_url","links","next_page_url","per_page","prev_page_url","total","deleteProduct","success","createProduct","editProduct","ViewProductModal","sku","price","stock","Date","created_at","toLocaleString","updated_at","DeleteProductModal","handleConfirm","EditProductModal","setName","setPrice","setStock","notRequired","v","isNaN","undefined","positive","integer","parseFloat","parseInt","clearInputs","toString","ViewStockTimelineModal","stockTimeline","pointsData","pointsLabels","item","date","toLocaleDateString","push","chartData","labels","datasets","backgroundColor","borderColor","borderWidth","length","options","legend","display","ProductsTable","setProduct","handleViewProduct","handleDeleteProduct","handleEditProduct","handleViewStockTimeline","scope","map","title","faEye","faChartLine","faPencilAlt","faTrash","Paginator","handleSetPage","page","filter","link","label","index","active","url","dangerouslySetInnerHTML","__html","CreateProductModal","FilterProductsModal","setSku","fromPrice","setFromPrice","toPrice","setToPrice","fromStock","setFromStock","toStock","setToStock","fromDate","setFromDate","toDate","setToDate","UploadContext","UploadProvider","uploads","setUploads","getUploads","uploadCsv","info","donwnloadSample","window","open","UploadProductsCsvModal","file","setFile","FormData","append","val","files","ProductsPage","handleCreateProduct","handleFilterProducts","getFiltersCount","Object","keys","key","includes","getTotalProductsCount","faFilter","faPlus","ViewUploadModal","upload","status","UploadsTable","setUpload","handleViewUpload","faCloudUploadAlt","faCheckCircle","faTimesCircle","UploadCsvModal","faDownload","UploadsPage","handleUploadCsv","getTotalUploadsCount","faUpload","Route","isPrivate","isGuest","Component","component","rest","render","location","state","Routes","exact","defaults","withCredentials","headers","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd30c09b.chunk.js","sourcesContent":["import { ValidationError } from 'yup';\n\nexport interface ValidationErrors {\n  [key: string]: any;\n}\n\nexport function getValidationErrors(err: ValidationError): ValidationErrors {\n  const validationErrors: ValidationErrors = {};\n\n  err.inner.forEach(error => {\n    let errorPath = error.path?.split('.');\n\n    if (errorPath) {\n      validationErrors[errorPath[0]] = error.message;\n    }\n  });\n\n  return validationErrors;\n}","export const appName = 'productApp';\nexport const appDomain = '.local.test';\nexport const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\nexport const flashMessageStorageId = `@${appName}:flashMessage`;","import axios from 'axios';\nimport { LoginCredentials } from '../shared/interfaces/loginCredentials.interface';\nimport { apiBaseUrl } from '../config';\nimport { GetUserResponse } from '../shared/components/getUserResponse.interface';\nimport { AuthData } from '../shared/interfaces/authData.interface';\nimport * as qs from 'query-string';\nimport { GetProductsResponse } from '../shared/interfaces/getProductsResponse.interface';\nimport { Product } from '../shared/interfaces/product.interface';\nimport { ProductCreate } from '../shared/interfaces/productCreate.interface';\nimport { ProductUpdate } from '../shared/interfaces/productUpdate.interface';\nimport { ProductFilter } from '../shared/interfaces/productFilter.interface';\nimport { Upload } from '../shared/interfaces/upload.interface';\nimport { UploadFilter } from '../shared/interfaces/uploadFilter.interface';\nimport { GetUploadsResponse } from '../shared/interfaces/getUploadsResponse.interface';\n\nexport async function loginRequest(\n  { email, password }: LoginCredentials\n): Promise<AuthData> {\n  await axios.get(apiBaseUrl + '/sanctum/csrf-cookie');\n  await axios.post(apiBaseUrl + '/login', {\n    email: email.trim(),\n    password: password.trim(),\n  });\n\n  const userData = await getUserData();\n\n  return {\n    username: userData.name,\n    email: userData.email,\n  }\n}\n\nexport async function getUserData(): Promise<GetUserResponse> {\n  const response = await axios.get(apiBaseUrl + '/api/user');\n\n  return response.data;\n}\n\nexport async function logoutRequest(): Promise<void> {\n  await axios.post(apiBaseUrl + '/logout');\n}\n\nexport async function getProductsRequest(\n  filters: ProductFilter,\n): Promise<GetProductsResponse> {\n  const queryString = filters ? '?' + qs.stringify(filters) : '';\n\n  const response = await axios.get<GetProductsResponse>(apiBaseUrl + `/api/products${queryString}`);\n\n  return response.data;\n}\n\nexport async function deleteProductRequest(\n  productId: number,\n): Promise<void> {\n  await axios.delete<void>(apiBaseUrl + `/api/products/${productId}`);\n}\n\nexport async function createProductRequest(\n  product: ProductCreate,\n): Promise<Product> {\n  const response = await axios.post<Product>(apiBaseUrl + '/api/products', product);\n\n  return response.data;\n}\n\nexport async function editProductRequest(\n  product: ProductUpdate,\n): Promise<Product> {\n  const response = await axios.put<Product>(apiBaseUrl + `/api/products/${product.id}`, product);\n\n  return response.data;\n}\n\nexport async function getUploadsRequest(\n  filters: UploadFilter,\n): Promise<GetUploadsResponse> {\n  const queryString = filters ? '?' + qs.stringify(filters) : '';\n\n  const response = await axios.get<GetUploadsResponse>(apiBaseUrl + `/api/uploads${queryString}`);\n\n  return response.data;\n}\n\nexport async function uploadCsvRequest(\n  data: FormData,\n): Promise<Upload> {\n  const response = await axios.post(apiBaseUrl + '/api/uploads', data);\n\n  return response.data;\n}","\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nimport { getUserData, loginRequest, logoutRequest } from '../services/api';\nimport { LoginCredentials } from '../shared/interfaces/loginCredentials.interface';\nimport { AuthData } from '../shared/interfaces/authData.interface';\nimport { useCookies } from 'react-cookie';\nimport { appDomain } from '../config';\n\ninterface AuthContextData {\n  logged: boolean,\n  authData: AuthData,\n  login(credentials: LoginCredentials): Promise<void>,\n  logout(): void;\n}\n\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [cookies, , removeCookie] = useCookies(['XSRF-TOKEN', 'products_api_session']);\n  const [authData, setAuthData] = useState<AuthData>({} as AuthData);\n  const [logged, setLogged] = useState<boolean>(false);\n\n  const clearCookies = useCallback((): void => {\n    removeCookie('XSRF-TOKEN', { path: '/', domain: appDomain });\n    removeCookie('products_api_session', { path: '/', domain: appDomain });\n  }, [removeCookie]);\n  \n  useEffect(() => {\n    if (cookies['XSRF-TOKEN']) {\n      getUserData()\n        .then(res => {\n          setLogged(true);\n          setAuthData({\n            username: res.name,\n            email: res.email,\n          })\n        })\n        .catch(err => {\n          console.log(`Fail to get logged user. Clearing cookies.`);\n\n          clearCookies();\n          \n          setLogged(false);\n          setAuthData({} as AuthData);\n        });\n    }\n  });\n  \n  const login = useCallback(async (credentials: LoginCredentials) => {\n    const response = await loginRequest(credentials);\n    \n    setAuthData(response);\n    setLogged(true);\n  }, []);\n\n  const logout = useCallback(async (): Promise<void> => {\n    try {\n      await logoutRequest();\n    } catch(err) {\n      throw err;\n    } finally {\n      clearCookies();\n\n      setAuthData({} as AuthData);\n      setLogged(false);\n    }\n  }, [clearCookies]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        logged,\n        authData,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","import { flashMessageStorageId } from '../config';\nimport { toast } from 'react-toastify';\n\ntype FlashMessageObj = {\n  level: 'info' | 'warning' | 'error';\n  message: string;\n}\n\nexport function flash(\n  messageObj: FlashMessageObj,\n): void {\n  localStorage.setItem(flashMessageStorageId, JSON.stringify(messageObj));\n}\n\nexport function clearFlash() {\n  localStorage.removeItem(flashMessageStorageId);\n}\n\nexport function getFlash() {\n  return localStorage.getItem(flashMessageStorageId);\n}\n\nexport function flashToast() {\n  const flashMessageObj = getFlash();\n\n  if (flashMessageObj) {\n    const { level, message } = JSON.parse(flashMessageObj);\n\n    toast(message, {\n      type: level || 'info',\n    });\n\n    clearFlash();\n  }\n}","import React, { FormEvent, useContext, useEffect, useState } from 'react'\nimport { LoginCredentials } from '../../shared/interfaces/loginCredentials.interface';\nimport { getValidationErrors, ValidationErrors } from '../../utils/validationErrors';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { AuthContext } from '../../context/auth';\nimport { flashToast } from '../../utils/flash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBarcode } from '@fortawesome/free-solid-svg-icons';\n\ninterface FormInputs extends LoginCredentials, ValidationErrors {};\n\nexport const Login: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n  const { login } = useContext(AuthContext);\n  \n  useEffect(() => {\n    flashToast();\n  }, []);\n\n  async function handleLogin(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    try {\n      const schema = Yup.object().shape({\n        email: Yup.string().email().required(),\n        password: Yup.string().required(),\n      });\n\n      await schema.validate({\n        email,\n        password,\n      }, {\n        abortEarly: false,\n      });\n\n      await login({\n        email,\n        password,\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n\n        setValidationErrors(validationErrors as FormInputs);\n      } else {\n        toast.error('Fail to login');\n      }\n    }\n  }\n\n  function setEmailHandler(value: string) {\n    if (validationErrors?.email) {\n      setValidationErrors({ ...validationErrors, email: '' });\n    }\n\n    setEmail(value);\n  }\n\n  function setPasswordHandler(value: string) {\n    if (validationErrors?.password) {\n      setValidationErrors({ ...validationErrors, password: '' });\n    }\n\n    setPassword(value);\n  }\n  \n  return (\n    <>\n    <div className=\"text-center mb-0\">\n      <FontAwesomeIcon icon={faBarcode} size=\"5x\" />\n      <h5>Products App</h5>\n    </div>\n    <div\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    >\n      <form className=\"card\" onSubmit={handleLogin}>\n        <div className=\"card-body\">\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"email\" className=\"mb-0\">\n              <small>Email<span className=\"text-danger\">*</span></small>\n            </label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              className={`form-control ${validationErrors?.email ? 'is-invalid' : ''}`}\n              value={email}\n              onChange={e => setEmailHandler(e.target.value)}\n            />\n              {validationErrors?.email && (\n              <span className=\"invalid-feedback\" role=\"alert\">\n                <strong>{validationErrors.email}</strong>\n              </span>\n            )}\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"password\" className=\"mb-0\">\n              <small>Password<span className=\"text-danger\">*</span></small>\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              className={`form-control ${validationErrors?.password ? 'is-invalid' : ''}`}\n              value={password}\n              onChange={e => setPasswordHandler(e.target.value)}\n            />\n            {validationErrors?.password && (\n              <span className=\"invalid-feedback\" role=\"alert\">\n                <strong>{validationErrors.password}</strong>\n              </span>\n            )}\n          </div>\n          <div className=\"text-center\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Login\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n    </>\n  );\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport $ from 'jquery';\n\nexport const LogoutModal: React.FC = () => {\n  const { logout } = useContext(AuthContext);\n\n  const handleConfirm = () => {\n    logout();\n\n    $('#logoutModal').modal('hide');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"logoutModal\" tabIndex={-1} aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            <div className=\"text-center\">\n              Confirm logout?\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-center\">\n            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n              No\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={handleConfirm}\n            >\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import { faBarcode } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth';\nimport { LogoutModal } from './logoutModal';\nimport { useLocation } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  const { authData } = useContext(AuthContext);\n  const { pathname } = useLocation();\n\n  return (\n    <>\n    <header className=\"mb-4\">\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-white shadow-sm\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <FontAwesomeIcon icon={faBarcode} size=\"2x\" />\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className={`nav-item ${pathname === '/' ? 'active' : ''}`}>\n                <Link className=\"nav-link\" to=\"/\">\n                  Products\n                </Link>\n              </li>\n              <li className={`nav-item ${pathname === '/uploads' ? 'active' : ''}`}>\n                <Link className=\"nav-link\" to=\"/uploads\">\n                  Uploads\n                </Link>\n              </li>\n            </ul>\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item dropdown\">\n                <button\n                  id=\"navbarDropdown\"\n                  className=\"btn btn-outline-secondary dropdown-toggle\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {authData.username} <span className=\"caret\"></span>\n                </button>\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                  <button\n                    className=\"dropdown-item\"\n                    data-toggle=\"modal\"\n                    data-target=\"#logoutModal\"\n                  >\n                    Logout\n                  </button>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <LogoutModal />\n    </>\n  );\n}","import React, { createContext, useState } from 'react';\nimport { Pagination } from '../shared/interfaces/pagination.interface';\n\ninterface PaginationContextData {\n  pagination: Pagination,\n  setPagination(pagination: Pagination): void,\n}\n\nexport const PaginationContext = createContext<PaginationContextData>(\n  {} as PaginationContextData\n);\n\nexport const PaginationProvider: React.FC = ({ children }) => {\n  const [pagination, setPagination] = useState<Pagination>({} as Pagination);\n\n  return (\n    <PaginationContext.Provider\n      value={{\n        pagination,\n        setPagination,\n      }}\n    >\n      {children}\n    </PaginationContext.Provider>\n  );\n};","\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useState\n} from 'react';\nimport { Product } from '../shared/interfaces/product.interface';\nimport {\n  createProductRequest,\n  deleteProductRequest,\n  editProductRequest,\n  getProductsRequest,\n} from '../services/api';\nimport { PaginationContext } from './pagination';\nimport { ProductCreate } from '../shared/interfaces/productCreate.interface';\nimport { ProductUpdate } from '../shared/interfaces/productUpdate.interface';\nimport { ProductFilter } from '../shared/interfaces/productFilter.interface';\nimport { toast } from 'react-toastify';\n\ninterface ProductContextData {\n  products: Product[],\n  filters: ProductFilter,\n  setFilters: Dispatch<SetStateAction<ProductFilter>>,\n  getProducts(): void,\n  deleteProduct(productId: number): void,\n  createProduct(product: ProductCreate): void,\n  editProduct(product: ProductUpdate): void,\n}\n\nexport const ProductContext = createContext<ProductContextData>(\n  {} as ProductContextData\n);\n\nexport const ProductProvider: React.FC = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [filters, setFilters] = useState<ProductFilter>({} as ProductFilter);\n  const { setPagination } = useContext(PaginationContext);\n\n  const getProducts = useCallback(async (): Promise<void> => {\n    try {\n      const response = await getProductsRequest(filters);\n\n      const {\n        data,\n        current_page,\n        first_page_url,\n        from,\n        last_page,\n        last_page_url,\n        links,\n        next_page_url,\n        path,\n        per_page,\n        prev_page_url,\n        to,\n        total,\n      } = response;\n\n      setProducts(data);\n      setPagination({\n        current_page,\n        first_page_url,\n        from,\n        last_page,\n        last_page_url,\n        links,\n        next_page_url,\n        path,\n        per_page,\n        prev_page_url,\n        to,\n        total,\n      });\n    } catch (err) {\n      toast.error('Fail to get products');\n    }\n  }, [filters, setPagination]);\n\n  const deleteProduct = useCallback(async (productId) => {\n    try {\n      await deleteProductRequest(productId);\n\n      await getProducts();\n\n      toast.success('Product deleted');\n    } catch (err) {\n      toast.error('Fail to delete product');\n    }\n  }, [getProducts]);\n\n  const createProduct = useCallback(async (product: ProductCreate): Promise<void> => {\n    try {\n      await createProductRequest(product);\n\n      await getProducts();\n\n      toast.success('Product created');\n    } catch (err) {\n      toast.error('Fail to create product');\n    }\n  }, [getProducts]);\n\n  const editProduct = useCallback(async (product: ProductUpdate): Promise<void> => {\n    try {\n      await editProductRequest(product);\n\n      await getProducts();\n\n      toast.success('Product updated');\n    } catch (err) {\n      toast.error('Fail to update product');\n    }\n  }, [getProducts]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        products,\n        filters,\n        setFilters,\n        getProducts,\n        deleteProduct,\n        createProduct,\n        editProduct,\n      }}\n    >\n      {children}\n    </ProductContext.Provider>\n  );\n};","import React from 'react';\nimport { Product } from '../../../shared/interfaces/product.interface';\n\ninterface ViewProductModalData {\n  product: Product,\n}\n\nexport const ViewProductModal: React.FC<ViewProductModalData> = ({ product }) => (\n  <div className=\"modal fade\" id=\"viewProductModal\" tabIndex={-1} aria-labelledby=\"viewProductModalLabel\" aria-hidden=\"true\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"viewProductModalLabel\">View Product</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div>\n            <span className=\"font-weight-bold\">Id:</span> <span>{product.id}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Name:</span> <span>{product.name}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">SKU:</span> <span>{product.sku}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Price:</span> <span>{product.price}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Stock:</span> <span>{product.stock}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Creation date:</span> <span>{new Date(product.created_at).toLocaleString()}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Last update date:</span> <span>{new Date(product.updated_at).toLocaleString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);","import React, { useContext } from 'react';\nimport $ from 'jquery';\nimport { Product } from '../../../shared/interfaces/product.interface';\nimport { ProductContext } from '../../../context/product';\n\ninterface DeleteProductModalData {\n  product: Product,\n}\n\nexport const DeleteProductModal: React.FC<DeleteProductModalData> = ({ product }) => {\n  const { deleteProduct } = useContext(ProductContext);\n  \n  const handleConfirm = async () => {\n    await deleteProduct(product.id);\n\n    $('#deleteProductModal').modal('hide');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"deleteProductModal\" tabIndex={-1} aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            <div className=\"text-center\">\n              Confirm product \"{product.name}\" deletion?\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-center\">\n            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n              No\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={handleConfirm}\n            >\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { FormEvent, useContext, useEffect, useState } from 'react';\nimport { getValidationErrors, ValidationErrors } from '../../../utils/validationErrors';\nimport { EditProductData } from '../../../shared/interfaces/editProductData.interface'\nimport { ProductContext } from '../../../context/product';\nimport $ from 'jquery';\nimport { Product } from '../../../shared/interfaces/product.interface';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\ninterface FormInputs extends EditProductData, ValidationErrors {};\n\ninterface EditProductModalData {\n  product: Product,\n}\n\nexport const EditProductModal: React.FC<EditProductModalData> = ({ product }) => {\n  const { editProduct } = useContext(ProductContext);\n  const [name, setName] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [stock, setStock] = useState<string>('');\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  useEffect(() => {\n    product.name && setName(product.name);\n    product.price && setPrice(product.price.toString());\n    product.stock && setStock(product.stock.toString());\n  }, [product]);\n\n  function setNameHandler(value: string) {\n    if (validationErrors?.name) {\n      setValidationErrors({ ...validationErrors, name: '' });\n    }\n\n    setName(value);\n  }\n\n  function setPriceHandler(value: string) {\n    if (validationErrors?.price) {\n      setValidationErrors({ ...validationErrors, price: '' });\n    }\n\n    setPrice(value);\n  }\n\n  function setStockHandler(value: string) {\n    if (validationErrors?.stock) {\n      setValidationErrors({ ...validationErrors, stock: '' });\n    }\n\n    setStock(value);\n  }\n\n  async function handleSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().notRequired(),\n        price: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .positive(),\n        stock: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .integer()\n          .positive(),\n      });\n\n      await schema.validate({\n        name,\n        price,\n        stock,\n      }, {\n        abortEarly: false,\n      });\n\n      await editProduct({\n        id: product.id,\n        name,\n        price: parseFloat(price),\n        stock: parseInt(stock),\n      });\n\n      $('#editProductModal').modal('hide');\n\n      clearInputs();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n\n        setValidationErrors(validationErrors as FormInputs);\n      } else {\n        toast.error('Invalid form data');\n      }\n    }\n  }\n\n  function clearInputs(): void {\n    setName('');\n    setPrice('');\n    setStock('');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"editProductModal\" tabIndex={-1} aria-labelledby=\"editProductModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"editProductModalLabel\">Edit Product</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\" className=\"mb-0\">\n                  <small>Name</small>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className={`form-control ${validationErrors?.name ? 'is-invalid' : ''}`}\n                  value={name}\n                  onChange={e => setNameHandler(e.target.value)}\n                />\n                {validationErrors?.name && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.name}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"price\" className=\"mb-0\">\n                  <small>Price</small>\n                </label>\n                <input\n                  id=\"price\"\n                  type=\"number\"\n                  className={`form-control ${validationErrors?.price ? 'is-invalid' : ''}`}\n                  value={price}\n                  onChange={e => setPriceHandler(e.target.value)}\n                />\n                {validationErrors?.price && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.price}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"stock\" className=\"mb-0\">\n                  <small>Stock</small>\n                </label>\n                <input\n                  id=\"stock\"\n                  type=\"number\"\n                  className={`form-control ${validationErrors?.stock ? 'is-invalid' : ''}`}\n                  value={stock}\n                  onChange={e => setStockHandler(e.target.value)}\n                />\n                {validationErrors?.stock && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.stock}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"d-flex align-items-center justify-content-around form-group mb-0\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                >\n                  Update\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Product } from '../../../shared/interfaces/product.interface';\nimport { Line } from 'react-chartjs-2';\n\ninterface ViewStockTimelineModalData {\n  product: Product,\n}\n\nexport const ViewStockTimelineModal: React.FC<ViewStockTimelineModalData> = ({ product }) => {\n  const { stockTimeline } = product;\n\n  let pointsData: number[] = [];\n  let pointsLabels: string[] = [];\n\n  stockTimeline?.forEach(item => {\n    let date = new Date(item.date)\n      .toLocaleDateString();\n\n    pointsData.push(item.stock);\n    pointsLabels.push(date);\n  });\n\n  const chartData = {\n    labels: pointsLabels,\n    datasets: [{\n      data: pointsData,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n      ],\n      borderWidth: 1,\n    }]\n  };\n\n  const chartOptions = {\n    legend: {\n      display: false\n    }\n  };\n\n  return (\n    <div className=\"modal fade\" id=\"viewStockTimelineModal\" tabIndex={-1} aria-labelledby=\"viewStockTimelineModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"viewStockTimelineModalLabel\">View Stock Timeline</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div>\n              <span className=\"font-weight-bold\">Id:</span> <span>{product.id}</span>\n            </div>\n            <div>\n              <span className=\"font-weight-bold\">Name:</span> <span>{product.name}</span>\n            </div>\n            <div className=\"mt-3\">\n              {pointsData.length > 0 ? (\n                <Line data={chartData} options={chartOptions} />\n              ) : (\n                <div className=\"d-flex align-items-center justify-content-center\">\n                  <div className=\"alert alert-warning\" role=\"alert\">\n                    No data available\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { faChartLine, faEye, faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Product } from '../../../shared/interfaces/product.interface';\nimport { ProductContext } from '../../../context/product';\nimport $ from 'jquery';\nimport { ViewProductModal } from './viewProductModal';\nimport { DeleteProductModal } from './deleteProductModal';\nimport { EditProductModal } from './editProductModal';\nimport { ViewStockTimelineModal } from './viewStockTimelineModal';\n\nexport const ProductsTable: React.FC = () => {\n  const { products, getProducts } = useContext(ProductContext);\n  const [product, setProduct] = useState<Product>({} as Product);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  const handleViewProduct = useCallback((product: Product) => {\n    setProduct(product);\n\n    $('#viewProductModal').modal('show');\n  }, []);\n\n  const handleDeleteProduct = useCallback((product: Product) => {\n    setProduct(product);\n\n    $('#deleteProductModal').modal('show');\n  }, []);\n\n  const handleEditProduct = useCallback((product: Product) => {\n    setProduct(product);\n\n    $('#editProductModal').modal('show');\n  }, []);\n\n  const handleViewStockTimeline = useCallback((product: Product) => {\n    setProduct(product);\n\n    $('#viewStockTimelineModal').modal('show');\n  }, []);\n\n  return (\n    <>\n    <table className=\"table table-bordered table-striped table-hover table-responsive-sm\">\n      <thead>\n        <tr className=\"text-center\">\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Price ($)</th>\n          <th scope=\"col\">Stock</th>\n          <th scope=\"col\">Creation Date</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {products.map(product => (\n          <tr key={product.id} className=\"text-center\">\n            <th scope=\"row\" className=\"text-center\">{product.id}</th>\n            <td>{product.name}</td>\n            <td>{product.price}</td>\n            <td>{product.stock}</td>\n            <td>{new Date(product.created_at).toLocaleDateString()}</td>\n            <td>\n              <button\n                className=\"btn btn-sm btn-primary m-1\"\n                title=\"View\"\n                onClick={() => handleViewProduct(product)}\n              >\n                <FontAwesomeIcon icon={faEye} size=\"1x\" />\n              </button>\n              <button\n                className=\"btn btn-sm btn-warning m-1\"\n                title=\"View stock timeline\"\n                onClick={() => handleViewStockTimeline(product)}\n              >\n                <FontAwesomeIcon icon={faChartLine} size=\"1x\" />\n              </button>\n              <button\n                className=\"btn btn-sm btn-secondary m-1\"\n                title=\"Edit\"\n                onClick={() => handleEditProduct(product)}\n              >\n                <FontAwesomeIcon icon={faPencilAlt} size=\"1x\" />\n              </button>\n              <button\n                className=\"btn btn-sm btn-danger m-1\"\n                title=\"Delete\"\n                onClick={() => handleDeleteProduct(product)}\n              >\n                <FontAwesomeIcon icon={faTrash} size=\"1x\" />\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    <ViewProductModal product={product} />\n    <DeleteProductModal product={product} />\n    <EditProductModal product={product} />\n    <ViewStockTimelineModal product={product} />\n    </>\n  );\n}","import React, { useCallback, useContext } from 'react';\nimport { PaginationContext } from '../../context/pagination';\nimport { ProductContext } from '../../context/product';\n\nexport const Paginator: React.FC = () => {\n  const { pagination } = useContext(PaginationContext);\n  const { filters, setFilters } = useContext(ProductContext);\n\n  const handleSetPage = useCallback(async (page: number) => {\n    setFilters({\n      ...filters,\n      page,\n    });\n  }, [filters, setFilters]);\n\n  return (\n    <div className=\"d-flex align-items-center justify-content-center\">\n      <nav aria-label=\"Products pagination\">\n        <ul className=\"pagination\">\n          <li className=\"page-item\" title=\"First page\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() => handleSetPage(1)}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </button>\n          </li>\n          {pagination?.links?.filter((link => parseInt(link.label)))\n            .map((link, index) => (\n            <li key={index} className={`page-item ${link.active ? 'active' : ''} ${link.url ? '' : 'disabled'}`}>\n              <button\n                className=\"page-link\"\n                onClick={() => handleSetPage(parseInt(link.label))}\n                dangerouslySetInnerHTML={{ __html: link.label }}\n              >\n              </button>\n            </li>\n          ))}\n          <li className=\"page-item\" title=\"Last page\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Next\"\n              onClick={() => handleSetPage(pagination.last_page)}\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}","import React, { FormEvent, useContext, useState } from 'react';\nimport { getValidationErrors, ValidationErrors } from '../../../utils/validationErrors';\nimport { CreateProductData } from '../../../shared/interfaces/createProductData.interface';\nimport { ProductContext } from '../../../context/product';\nimport $ from 'jquery';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\ninterface FormInputs extends CreateProductData, ValidationErrors { };\n\nexport const CreateProductModal: React.FC = () => {\n  const { createProduct } = useContext(ProductContext);\n  const [name, setName] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [stock, setStock] = useState<string>('');\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  function setNameHandler(value: string) {\n    if (validationErrors?.name) {\n      setValidationErrors({ ...validationErrors, name: '' });\n    }\n\n    setName(value);\n  }\n\n  function setPriceHandler(value: string) {\n    if (validationErrors?.price) {\n      setValidationErrors({ ...validationErrors, price: '' });\n    }\n\n    setPrice(value);\n  }\n\n  function setStockHandler(value: string) {\n    if (validationErrors?.stock) {\n      setValidationErrors({ ...validationErrors, stock: '' });\n    }\n\n    setStock(value);\n  }\n\n  async function handleSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().required(),\n        price: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .required()\n          .positive(),\n        stock: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .integer()\n          .positive(),\n      });\n\n      await schema.validate({\n        name,\n        price,\n        stock,\n      }, {\n        abortEarly: false,\n      });\n\n      await createProduct({\n        name,\n        price: parseFloat(price),\n        stock: parseInt(stock) || undefined,\n      });\n\n      $('#createProductModal').modal('hide');\n\n      clearInputs();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n\n        setValidationErrors(validationErrors as FormInputs);\n      } else {\n        toast.error('Invalid form data');\n      }\n    }\n  }\n\n  function clearInputs(): void {\n    setName('');\n    setPrice('');\n    setStock('');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"createProductModal\" tabIndex={-1} aria-labelledby=\"createProductModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"createProductModalLabel\">Create Product</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\" className=\"mb-0\">\n                  <small>Name<span className=\"text-danger\">*</span></small>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className={`form-control ${validationErrors?.name ? 'is-invalid' : ''}`}\n                  value={name}\n                  onChange={e => setNameHandler(e.target.value)}\n                />\n                {validationErrors?.name && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.name}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"price\" className=\"mb-0\">\n                  <small>Price<span className=\"text-danger\">*</span></small>\n                </label>\n                <input\n                  id=\"price\"\n                  type=\"number\"\n                  className={`form-control ${validationErrors?.price ? 'is-invalid' : ''}`}\n                  value={price}\n                  onChange={e => setPriceHandler(e.target.value)}\n                />\n                {validationErrors?.price && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.price}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"stock\" className=\"mb-0\">\n                  <small>Stock</small>\n                </label>\n                <input\n                  id=\"stock\"\n                  type=\"number\"\n                  className={`form-control ${validationErrors?.stock ? 'is-invalid' : ''}`}\n                  value={stock}\n                  onChange={e => setStockHandler(e.target.value)}\n                />\n                {validationErrors?.stock && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.stock}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"d-flex align-items-center justify-content-around form-group mb-0\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                >\n                  Create\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { FormEvent, useContext, useEffect, useState } from 'react';\nimport { ProductContext } from '../../../context/product';\nimport { ProductFilter } from '../../../shared/interfaces/productFilter.interface';\nimport { getValidationErrors, ValidationErrors } from '../../../utils/validationErrors';\nimport $ from 'jquery';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\ninterface FormInputs extends ProductFilter, ValidationErrors { };\n\nexport const FilterProductsModal: React.FC = () => {\n  const { filters, setFilters } = useContext(ProductContext);\n  const [name, setName] = useState<string>(filters.name || '');\n  const [sku, setSku] = useState<string>(filters.sku || '');\n  const [fromPrice, setFromPrice] = useState<string>(filters.fromPrice || '');\n  const [toPrice, setToPrice] = useState<string>(filters.toPrice || '');\n  const [fromStock, setFromStock] = useState<string>(filters.fromStock || '');\n  const [toStock, setToStock] = useState<string>(filters.toStock || '');\n  const [fromDate, setFromDate] = useState<string>(filters.fromDate || '');\n  const [toDate, setToDate] = useState<string>(filters.toDate || '');\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  useEffect(() => {\n    filters.name && setName(filters.name);\n  }, [filters]);\n\n  function setNameHandler(value: string) {\n    if (validationErrors?.name) {\n      setValidationErrors({ ...validationErrors, name: '' });\n    }\n\n    setName(value);\n  }\n\n  function setSkuHandler(value: string) {\n    if (validationErrors?.sku) {\n      setValidationErrors({ ...validationErrors, sku: '' });\n    }\n\n    setSku(value);\n  }\n\n  function setFromPriceHandler(value: string) {\n    if (validationErrors?.fromPrice) {\n      setValidationErrors({ ...validationErrors, fromPrice: '' });\n    }\n\n    setFromPrice(value);\n  }\n\n  function setToPriceHandler(value: string) {\n    if (validationErrors?.toPrice) {\n      setValidationErrors({ ...validationErrors, toPrice: '' });\n    }\n\n    setToPrice(value);\n  }\n\n  function setFromStockHandler(value: string) {\n    if (validationErrors?.fromStock) {\n      setValidationErrors({ ...validationErrors, fromStock: '' });\n    }\n\n    setFromStock(value);\n  }\n\n  function setToStockHandler(value: string) {\n    if (validationErrors?.toStock) {\n      setValidationErrors({ ...validationErrors, toStock: '' });\n    }\n\n    setToStock(value);\n  }\n\n  function setFromDateHandler(value: string) {\n    if (validationErrors?.fromDate) {\n      setValidationErrors({ ...validationErrors, fromDate: '' });\n    }\n\n    setFromDate(value);\n  }\n\n  function setToDateHandler(value: string) {\n    if (validationErrors?.toDate) {\n      setValidationErrors({ ...validationErrors, toDate: '' });\n    }\n\n    setToDate(value);\n  }\n\n  async function handleSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().notRequired(),\n        sku: Yup.string().notRequired(),\n        fromPrice: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .positive(),\n        toPrice: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .positive(),\n        fromStock: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .positive(),\n        toStock: Yup.number()\n          .transform(v => isNaN(v) ? undefined : v)\n          .notRequired()\n          .positive(),\n        fromDate: Yup.date()\n          .transform(v => isNaN(Date.parse(v)) ? undefined : v)\n          .notRequired(),\n        toDate: Yup.date()\n          .transform(v => isNaN(Date.parse(v)) ? undefined : v)\n          .notRequired(),\n      });\n\n      await schema.validate({\n        name,\n        sku,\n        fromPrice,\n        toPrice,\n        fromStock,\n        toStock,\n        fromDate,\n        toDate,\n      }, {\n        abortEarly: false,\n      });\n\n      await setFilters({\n        ...name && { name },\n        ...sku && { sku },\n        ...fromPrice && { fromPrice },\n        ...toPrice && { toPrice },\n        ...fromStock && { fromStock },\n        ...toStock && { toStock },\n        ...fromDate && { fromDate },\n        ...toDate && { toDate },\n      });\n\n      $('#filterProductModal').modal('hide');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n\n        setValidationErrors(validationErrors as FormInputs);\n      } else {\n        toast.error('Invalid form data');\n      }\n    }\n  }\n\n  async function handleClearInputs(): Promise<void> {\n    setFilters({});\n    setName('');\n    setSku('');\n    setFromPrice('');\n    setToPrice('');\n    setFromStock('');\n    setToStock('');\n    setFromDate('');\n    setToDate('');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"filterProductModal\" tabIndex={-1} aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"filterProductModalLabel\">Filter Products</h5>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\" className=\"mb-0\">\n                  <small>Name</small>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className={`form-control ${validationErrors?.name ? 'is-invalid' : ''}`}\n                  value={name}\n                  onChange={e => setNameHandler(e.target.value)}\n                />\n                {validationErrors?.name && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.name}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sku\" className=\"mb-0\">\n                  <small>SKU</small>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className={`form-control ${validationErrors?.sku ? 'is-invalid' : ''}`}\n                  value={sku}\n                  onChange={e => setSkuHandler(e.target.value)}\n                />\n                {validationErrors?.sku && (\n                  <span className=\"invalid-feedback\" role=\"alert\">\n                    <strong>{validationErrors.sku}</strong>\n                  </span>\n                )}\n              </div>\n              <div className=\"form-row mb-3 is-invalid\">\n                <div className=\"col\">\n                  <label htmlFor=\"fromPrice\" className=\"mb-0\">\n                    <small>From price</small>\n                  </label>\n                  <input\n                    id=\"fromPrice\"\n                    className=\"form-control\" \n                    type=\"number\"\n                    value={fromPrice}\n                    onChange={e => setFromPriceHandler(e.target.value)}\n                  />\n                  {validationErrors?.fromPrice && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.fromPrice}</strong>\n                    </span>\n                  )}\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"toPrice\" className=\"mb-0\">\n                    <small>To price</small>\n                  </label>\n                  <input\n                    id=\"toPrice\"\n                    className=\"form-control\"\n                    type=\"number\"\n                    value={toPrice}\n                    onChange={e => setToPriceHandler(e.target.value)}\n                  />\n                  {validationErrors?.toPrice && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.toPrice}</strong>\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row mb-3\">\n                <div className=\"col\">\n                  <label htmlFor=\"fromStock\" className=\"mb-0\">\n                    <small>From stock</small>\n                  </label>\n                  <input\n                    id=\"fromStock\"\n                    className=\"form-control\" \n                    type=\"number\"\n                    value={fromStock}\n                    onChange={e => setFromStockHandler(e.target.value)}\n                  />\n                  {validationErrors?.fromStock && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.fromStock}</strong>\n                    </span>\n                  )}\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"toStock\" className=\"mb-0\">\n                    <small>To stock</small>\n                  </label>\n                  <input\n                    id=\"toStock\"\n                    className=\"form-control\"\n                    type=\"number\"\n                    value={toStock}\n                    onChange={e => setToStockHandler(e.target.value)}\n                  />\n                  {validationErrors?.toStock && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.toStock}</strong>\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-row mb-3\">\n                <div className=\"col\">\n                  <label htmlFor=\"fromDate\" className=\"mb-0\">\n                    <small>From date</small>\n                  </label>\n                  <input\n                    id=\"fromDate\"\n                    className=\"form-control\" \n                    type=\"date\"\n                    value={fromDate}\n                    onChange={e => setFromDateHandler(e.target.value)}\n                  />\n                  {validationErrors?.fromDate && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.fromDate}</strong>\n                    </span>\n                  )}\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"toDate\" className=\"mb-0\">\n                    <small>To date</small>\n                  </label>\n                  <input\n                    id=\"toDate\"\n                    className=\"form-control\"\n                    type=\"date\"\n                    value={toDate}\n                    onChange={e => setToDateHandler(e.target.value)}\n                  />\n                  {validationErrors?.toDate && (\n                    <span className=\"invalid-feedback d-inline-block\" role=\"alert\">\n                      <strong>{validationErrors.toDate}</strong>\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-around form-group mb-0\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClearInputs}>\n                  Clear\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                >\n                  Filter\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useState\n} from 'react';\nimport { Upload } from '../shared/interfaces/upload.interface';\nimport {\n  getUploadsRequest,\n  uploadCsvRequest,\n} from '../services/api';\nimport { PaginationContext } from './pagination';\nimport { UploadFilter } from '../shared/interfaces/uploadFilter.interface';\nimport { toast } from 'react-toastify';\nimport { apiBaseUrl } from '../config';\n\ninterface UploadContextData {\n  uploads: Upload[],\n  filters: UploadFilter,\n  setFilters: Dispatch<SetStateAction<UploadFilter>>,\n  getUploads(): void,\n  uploadCsv(file: any): void,\n  donwnloadSample(): void,\n}\n\nexport const UploadContext = createContext<UploadContextData>(\n  {} as UploadContextData\n);\n\nexport const UploadProvider: React.FC = ({ children }) => {\n  const [uploads, setUploads] = useState<Upload[]>([]);\n  const [filters, setFilters] = useState<UploadFilter>({} as UploadFilter);\n  const { setPagination } = useContext(PaginationContext);\n\n  const getUploads = useCallback(async (): Promise<void> => {\n    try {\n      const response = await getUploadsRequest(filters);\n\n      const {\n        data,\n        current_page,\n        first_page_url,\n        from,\n        last_page,\n        last_page_url,\n        links,\n        next_page_url,\n        path,\n        per_page,\n        prev_page_url,\n        to,\n        total,\n      } = response;\n\n      setUploads(data);\n      setPagination({\n        current_page,\n        first_page_url,\n        from,\n        last_page,\n        last_page_url,\n        links,\n        next_page_url,\n        path,\n        per_page,\n        prev_page_url,\n        to,\n        total,\n      });\n    } catch (err) {\n      toast.error('Fail to get uploads');\n    }\n  }, [filters, setPagination]);\n\n  const uploadCsv = useCallback(async (data: FormData): Promise<void> => {\n    try {\n      await uploadCsvRequest(data);\n\n      await getUploads();\n\n      toast.info('File uploaded');\n    } catch (err) {\n      toast.error('Fail to upload file');\n    }\n  }, [getUploads]);\n\n  const donwnloadSample = useCallback(async (): Promise<void> => {\n    try {\n      window.open(apiBaseUrl + '/api/uploads/actions/get-sample-csv');\n\n      toast.info('Sample downloaded');\n    } catch (err) {\n      toast.error('Fail to download sample');\n    }\n  }, []);\n\n  return (\n    <UploadContext.Provider\n      value={{\n        uploads,\n        filters,\n        setFilters,\n        getUploads,\n        uploadCsv,\n        donwnloadSample,\n      }}\n    >\n      {children}\n    </UploadContext.Provider>\n  );\n};","import React, { FormEvent, useContext, useState } from 'react';\nimport { ValidationErrors } from '../../../utils/validationErrors';\nimport { UploadContext } from '../../../context/upload';\nimport $ from 'jquery';\nimport { UploadCsvData } from '../../../shared/interfaces/uploadCsvData.interface';\n\ninterface FormInputs extends UploadCsvData, ValidationErrors { };\n\nexport const UploadProductsCsvModal: React.FC = () => {\n  const { uploadCsv } = useContext(UploadContext);\n  const [file, setFile] = useState<File|undefined>(undefined);\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  async function handleSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    const data = new FormData();\n\n    data.append('file', file as Blob);\n\n    await uploadCsv(data);\n\n    $('#uploadProductsCsvModal').modal('hide');\n\n    clearInputs();\n  }\n\n  function setFileHandler(value: File|undefined) {\n    if (validationErrors?.file) {\n      setValidationErrors({ ...validationErrors, file: undefined });\n    }\n\n    setFile(value);\n  }\n\n  function clearInputs(): void {\n    setFile(undefined);\n\n    $('#file').val('');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"uploadProductsCsvModal\" tabIndex={-1} aria-labelledby=\"uploadProductsCsvModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"uploadProductsCsvModalLabel\">Upload CSV</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"file\">File</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control-file\"\n                  id=\"file\"\n                  onChange={e => setFileHandler(e.target?.files?.[0])}\n                />\n                <small id=\"fileHelpBlock\" className=\"form-text text-muted\">\n                  File must be .csv &lt; 10Mb size\n                </small>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-around form-group mb-0\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                >\n                  Upload\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useCallback, useContext } from 'react'\nimport { Header } from '../../shared/components/header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ProductsTable } from './components/productsTable';\nimport { Paginator } from '../../shared/components/paginator';\nimport $ from 'jquery';\nimport { CreateProductModal } from './components/createProductModal';\nimport { FilterProductsModal } from './components/filterProductsModal';\nimport { ProductContext } from '../../context/product';\nimport { UploadProductsCsvModal } from './components/uploadProductsCsvModal';\nimport { PaginationContext } from '../../context/pagination';\n\nexport const ProductsPage: React.FC = () => {\n  const { filters } = useContext(ProductContext);\n  const { pagination } = useContext(PaginationContext);\n\n  const handleCreateProduct = useCallback(() => {\n    $('#createProductModal').modal('show');\n  }, []);\n\n  const handleFilterProducts = useCallback(() => {\n    $('#filterProductModal').modal('show');\n  }, []);\n\n  const getFiltersCount = useCallback((): number => {\n    return Object.keys(filters).filter(key => {\n      return !['page', 'limit'].includes(key);\n    }).length;\n  }, [filters]);\n\n  const getTotalProductsCount = useCallback((): number => {\n    return pagination.total || 0;\n  }, [pagination]);\n\n  return (\n    <>\n    <Header />\n    <main className=\"container\">\n      <div className=\"d-flex align-items-center justify-content-between mb-2\">\n        <h4 className=\"mb-0\">\n          Products List\n          <span className=\"badge bg-secondary ml-2\">{getTotalProductsCount()}</span>\n        </h4>\n        <div className=\"d-flex align-items-center justify-content-center flex-wrap\">\n          <button\n            className=\"btn btn-info m-1\"\n            onClick={handleFilterProducts}\n          >\n            <FontAwesomeIcon icon={faFilter} size=\"1x\" className=\"mr-1\" />\n            <span className=\"mr-1\">Filter</span>\n            <span className=\"badge bg-secondary\">{getFiltersCount()}</span>\n          </button>\n          <button\n            className=\"btn btn-success m-1\"\n            onClick={handleCreateProduct}\n          >\n            <FontAwesomeIcon icon={faPlus} size=\"1x\" className=\"mr-1\" />\n            Create\n          </button>\n        </div>\n      </div>\n      <ProductsTable />\n      <Paginator />\n    </main>\n    <CreateProductModal />\n    <UploadProductsCsvModal />\n    <FilterProductsModal />\n    </>\n  );\n}","import React from 'react';\nimport { Upload } from '../../../shared/interfaces/upload.interface';\n\ninterface ViewUploadModalData {\n  upload: Upload,\n}\n\nexport const ViewUploadModal: React.FC<ViewUploadModalData> = ({ upload }) => (\n  <div className=\"modal fade\" id=\"viewUploadModal\" tabIndex={-1} aria-labelledby=\"viewUploadModalLabel\" aria-hidden=\"true\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"viewUploadModalLabel\">View Upload</h5>\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div>\n            <span className=\"font-weight-bold\">Id:</span> <span>{upload.id}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Path:</span> <span>{upload.path}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Size:</span> <span>{upload.size}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Type:</span> <span>{upload.type}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Status:</span> <span>{upload.status}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Creation date:</span> <span>{new Date(upload.created_at).toLocaleString()}</span>\n          </div>\n          <div>\n            <span className=\"font-weight-bold\">Last update date:</span> <span>{new Date(upload.updated_at).toLocaleString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { faCheckCircle, faCloudUploadAlt, faEye, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport $ from 'jquery';\nimport { UploadContext } from '../../../context/upload';\nimport { Upload } from '../../../shared/interfaces/upload.interface';\nimport { ViewUploadModal } from './viewUploadModal';\n\nexport const UploadsTable: React.FC = () => {\n  const { uploads, getUploads } = useContext(UploadContext);\n  const [upload, setUpload] = useState<Upload>({} as Upload);\n\n  useEffect(() => {\n    getUploads();\n  }, [getUploads]);\n\n  const handleViewUpload = useCallback((upload: Upload) => {\n    setUpload(upload);\n\n    $('#viewUploadModal').modal('show');\n  }, []);\n\n  const getUploadStatus = (status: string): JSX.Element => {\n    if (status === 'CREATED') {\n      return <FontAwesomeIcon icon={faCloudUploadAlt} size=\"2x\" title=\"Created\" className=\"text-info\" />;\n    }\n\n    if (status === 'PROCESSED') {\n      return <FontAwesomeIcon icon={faCheckCircle} size=\"2x\" title=\"Processed\" className=\"text-success\" />;\n    }\n\n    if (status === 'ERROR') {\n      return <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" title=\"Error\" className=\"text-danger\" />;\n    }\n\n    return <span>'-'</span>;\n  }\n\n  return (\n    <>\n    <table className=\"table table-bordered table-striped table-hover table-responsive-sm\">\n      <thead>\n        <tr className=\"text-center\">\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Path</th>\n          <th scope=\"col\">Creation Date</th>\n          <th scope=\"col\">Status</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {uploads.map(upload => (\n          <tr key={upload.id} className=\"text-center\">\n            <th scope=\"row\" className=\"text-center\">{upload.id}</th>\n            <td>{upload.path}</td>\n            <td>{new Date(upload.created_at).toLocaleDateString()}</td>\n            <td>{getUploadStatus(upload.status)}</td>\n            <td>\n              <button\n                className=\"btn btn-sm btn-primary m-1\"\n                title=\"View\"\n                onClick={() => handleViewUpload(upload)}\n              >\n                <FontAwesomeIcon icon={faEye} size=\"1x\" />\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    <ViewUploadModal upload={upload} />\n    </>\n  );\n}","import React, { FormEvent, useContext, useState } from 'react';\nimport { ValidationErrors } from '../../../utils/validationErrors';\nimport { UploadContext } from '../../../context/upload';\nimport $ from 'jquery';\nimport { UploadCsvData } from '../../../shared/interfaces/uploadCsvData.interface';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\n\ninterface FormInputs extends UploadCsvData, ValidationErrors { };\n\nexport const UploadCsvModal: React.FC = () => {\n  const { uploadCsv, donwnloadSample } = useContext(UploadContext);\n  const [file, setFile] = useState<File | undefined>(undefined);\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  async function handleSubmit(e: FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n\n    const data = new FormData();\n\n    data.append('file', file as Blob);\n\n    await uploadCsv(data);\n\n    $('#uploadCsvModal').modal('hide');\n\n    clearInputs();\n  }\n\n  function setFileHandler(value: File | undefined) {\n    if (validationErrors?.file) {\n      setValidationErrors({ ...validationErrors, file: undefined });\n    }\n\n    setFile(value);\n  }\n\n  async function handleDownloadSample() {\n    await donwnloadSample();\n  }\n\n  function clearInputs(): void {\n    setFile(undefined);\n\n    $('#file').val('');\n  }\n\n  return (\n    <div className=\"modal fade\" id=\"uploadCsvModal\" tabIndex={-1} aria-labelledby=\"uploadCsvModalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"uploadCsvModalLabel\">Upload CSV</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"file\">File</label>\n                <input\n                  type=\"file\"\n                  className=\"form-control-file\"\n                  id=\"file\"\n                  onChange={e => setFileHandler(e.target?.files?.[0])}\n                />\n                <small id=\"fileHelpBlock\" className=\"form-text text-muted\">\n                  File must be .csv &lt; 2Mb size\n                </small>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-link mb-3\"\n                onClick={handleDownloadSample}\n              >\n                <FontAwesomeIcon icon={faDownload} size=\"1x\" className=\"mr-1\" />\n                Download sample\n              </button>\n              <div className=\"d-flex align-items-center justify-content-around form-group mb-0\">\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-success\"\n                >\n                  Upload\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useCallback, useContext } from 'react'\nimport { Header } from '../../shared/components/header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { UploadsTable } from './components/uploadsTable';\nimport $ from 'jquery';\nimport { UploadCsvModal } from './components/uploadCsvModal';\nimport { PaginationContext } from '../../context/pagination';\n\nexport const UploadsPage: React.FC = () => {\n  const { pagination } = useContext(PaginationContext);\n\n  const handleUploadCsv = useCallback(() => {\n    $('#uploadCsvModal').modal('show');\n  }, []);\n\n  const getTotalUploadsCount = useCallback((): number => {\n    return pagination.total || 0;\n  }, [pagination]);\n\n  return (\n    <>\n      <Header />\n      <main className=\"container\">\n        <div className=\"d-flex align-items-center justify-content-between mb-2\">\n          <h4 className=\"mb-0\">\n            Uploads List\n            <span className=\"badge bg-secondary ml-2\">{getTotalUploadsCount()}</span>\n          </h4>\n          <div className=\"d-flex align-items-center justify-content-center flex-wrap\">\n            <button\n              className=\"btn btn-secondary m-1\"\n              onClick={handleUploadCsv}\n            >\n              <FontAwesomeIcon icon={faUpload} size=\"1x\" className=\"mr-1\" />\n              New\n            </button>\n          </div>\n        </div>\n        <UploadsTable />\n      </main>\n      <UploadCsvModal />\n    </>\n  );\n}","import React, { useContext } from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  isGuest?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  isGuest = false,\n  component: Component,\n  ...rest\n}) => {\n  const { logged } = useContext(AuthContext);\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        if (isGuest && logged) {\n          return (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: { from: location },\n              }}\n            />\n          );\n        }\n\n        if (isPrivate && !logged) {\n          return (\n            <Redirect\n              to={{\n                pathname: 'login',\n                state: { from: location },\n              }}\n            />\n          );\n        }\n\n        return <Component />;\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Login } from '../pages/login';\nimport { ProductsPage } from '../pages/products';\nimport { UploadsPage } from '../pages/uploads';\nimport Route from './Route';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/login\" exact component={Login} isGuest />\n    <Route path=\"/\" exact component={ProductsPage} isPrivate />\n    <Route path=\"/uploads\" exact component={UploadsPage} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes';\nimport { toast } from 'react-toastify';\nimport { AuthProvider } from './context/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { ProductProvider } from './context/product';\nimport { PaginationProvider } from './context/pagination';\nimport { UploadProvider } from './context/upload';\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers = {\n  'Accept': 'application/json',\n}\n\ntoast.configure({\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n          <PaginationProvider>\n            <ProductProvider>\n              <UploadProvider>\n                <Routes />\n              </UploadProvider>\n            </ProductProvider>\n          </PaginationProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}